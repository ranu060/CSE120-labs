#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1110-g18392a46)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 9;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_0000024b659e02e0 .scope module, "incrementer_top" "incrementer_top" 2 4;
 .timescale -9 -9;
v0000024b65a487c0_0 .net "cry", 0 0, L_0000024b65a4aeb0;  1 drivers
v0000024b65a49120_0 .var/i "exp_out", 31 0;
v0000024b65a49260_0 .var "in_a", 3 0;
v0000024b65a498a0_0 .var "inc", 0 0;
v0000024b65a48f40_0 .var/i "index", 31 0;
v0000024b65a48c20_0 .net "sum", 3 0, L_0000024b65a49440;  1 drivers
S_0000024b659e0470 .scope module, "incrementer" "incrementer" 2 49, 3 16 0, S_0000024b659e02e0;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "a";
    .port_info 1 /INPUT 1 "inc";
    .port_info 2 /OUTPUT 1 "cry";
    .port_info 3 /OUTPUT 4 "y";
L_0000024b65a4b230 .functor BUFZ 1, L_0000024b65a4ac10, C4<0>, C4<0>, C4<0>;
L_0000024b65a4af90 .functor BUFZ 1, L_0000024b65a4a9e0, C4<0>, C4<0>, C4<0>;
L_0000024b65a4b150 .functor BUFZ 1, L_0000024b65a4b540, C4<0>, C4<0>, C4<0>;
L_0000024b65a4acf0 .functor BUFZ 1, L_0000024b659ead80, C4<0>, C4<0>, C4<0>;
v0000024b659d81d0_0 .net *"_ivl_11", 0 0, L_0000024b65a4b230;  1 drivers
v0000024b659d8270_0 .net *"_ivl_15", 0 0, L_0000024b65a4af90;  1 drivers
v0000024b659d83b0_0 .net *"_ivl_19", 0 0, L_0000024b65a4b150;  1 drivers
v0000024b659d8450_0 .net *"_ivl_24", 0 0, L_0000024b65a4acf0;  1 drivers
v0000024b65a48ea0_0 .net "a", 3 0, v0000024b65a49260_0;  1 drivers
v0000024b65a49300_0 .net "cry", 0 0, L_0000024b65a4aeb0;  alias, 1 drivers
v0000024b65a485e0_0 .net "inc", 0 0, v0000024b65a498a0_0;  1 drivers
v0000024b65a49080_0 .net "s0", 0 0, L_0000024b65a489a0;  1 drivers
v0000024b65a48cc0_0 .net "s1", 0 0, L_0000024b65a4aac0;  1 drivers
v0000024b65a49f80_0 .net "s10", 0 0, L_0000024b659ead80;  1 drivers
v0000024b65a49800_0 .net "s2", 0 0, L_0000024b65a4ac10;  1 drivers
v0000024b65a48400_0 .net "s3", 0 0, L_0000024b65a493a0;  1 drivers
v0000024b65a496c0_0 .net "s4", 0 0, L_0000024b65a4a970;  1 drivers
v0000024b65a48680_0 .net "s5", 0 0, L_0000024b65a4a9e0;  1 drivers
v0000024b65a48b80_0 .net "s6", 0 0, L_0000024b65a484a0;  1 drivers
v0000024b65a48d60_0 .net "s7", 0 0, L_0000024b65a4b2a0;  1 drivers
v0000024b65a48fe0_0 .net "s8", 0 0, L_0000024b65a4b540;  1 drivers
v0000024b65a48e00_0 .net "s9", 0 0, L_0000024b65a48540;  1 drivers
v0000024b65a491c0_0 .net "y", 3 0, L_0000024b65a49440;  alias, 1 drivers
L_0000024b65a489a0 .part v0000024b65a49260_0, 3, 1;
L_0000024b65a493a0 .part v0000024b65a49260_0, 2, 1;
L_0000024b65a484a0 .part v0000024b65a49260_0, 1, 1;
L_0000024b65a48540 .part v0000024b65a49260_0, 0, 1;
L_0000024b65a49440 .concat8 [ 1 1 1 1], L_0000024b65a4acf0, L_0000024b65a4b150, L_0000024b65a4af90, L_0000024b65a4b230;
S_0000024b659e9e80 .scope module, "half_adder_i0" "half_adder" 3 37, 3 6 0, S_0000024b659e0470;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "cry";
L_0000024b659ead80 .functor XOR 1, L_0000024b65a48540, v0000024b65a498a0_0, C4<0>, C4<0>;
L_0000024b65a4b2a0 .functor AND 1, L_0000024b65a48540, v0000024b65a498a0_0, C4<1>, C4<1>;
v0000024b659d8950_0 .net "a", 0 0, L_0000024b65a48540;  alias, 1 drivers
v0000024b659d8bd0_0 .net "b", 0 0, v0000024b65a498a0_0;  alias, 1 drivers
v0000024b659d89f0_0 .net "cry", 0 0, L_0000024b65a4b2a0;  alias, 1 drivers
v0000024b659d8310_0 .net "sum", 0 0, L_0000024b659ead80;  alias, 1 drivers
S_0000024b659ea010 .scope module, "half_adder_i1" "half_adder" 3 43, 3 6 0, S_0000024b659e0470;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "cry";
L_0000024b65a4b540 .functor XOR 1, L_0000024b65a484a0, L_0000024b65a4b2a0, C4<0>, C4<0>;
L_0000024b65a4a970 .functor AND 1, L_0000024b65a484a0, L_0000024b65a4b2a0, C4<1>, C4<1>;
v0000024b659d86d0_0 .net "a", 0 0, L_0000024b65a484a0;  alias, 1 drivers
v0000024b659d7ff0_0 .net "b", 0 0, L_0000024b65a4b2a0;  alias, 1 drivers
v0000024b659d8590_0 .net "cry", 0 0, L_0000024b65a4a970;  alias, 1 drivers
v0000024b659d8630_0 .net "sum", 0 0, L_0000024b65a4b540;  alias, 1 drivers
S_0000024b659ea1a0 .scope module, "half_adder_i2" "half_adder" 3 49, 3 6 0, S_0000024b659e0470;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "cry";
L_0000024b65a4a9e0 .functor XOR 1, L_0000024b65a493a0, L_0000024b65a4a970, C4<0>, C4<0>;
L_0000024b65a4aac0 .functor AND 1, L_0000024b65a493a0, L_0000024b65a4a970, C4<1>, C4<1>;
v0000024b659d8090_0 .net "a", 0 0, L_0000024b65a493a0;  alias, 1 drivers
v0000024b659d8a90_0 .net "b", 0 0, L_0000024b65a4a970;  alias, 1 drivers
v0000024b659d8130_0 .net "cry", 0 0, L_0000024b65a4aac0;  alias, 1 drivers
v0000024b659d8b30_0 .net "sum", 0 0, L_0000024b65a4a9e0;  alias, 1 drivers
S_0000024b659b2a10 .scope module, "half_adder_i3" "half_adder" 3 55, 3 6 0, S_0000024b659e0470;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "sum";
    .port_info 3 /OUTPUT 1 "cry";
L_0000024b65a4ac10 .functor XOR 1, L_0000024b65a489a0, L_0000024b65a4aac0, C4<0>, C4<0>;
L_0000024b65a4aeb0 .functor AND 1, L_0000024b65a489a0, L_0000024b65a4aac0, C4<1>, C4<1>;
v0000024b659d8c70_0 .net "a", 0 0, L_0000024b65a489a0;  alias, 1 drivers
v0000024b659d8770_0 .net "b", 0 0, L_0000024b65a4aac0;  alias, 1 drivers
v0000024b659d8db0_0 .net "cry", 0 0, L_0000024b65a4aeb0;  alias, 1 drivers
v0000024b659d8d10_0 .net "sum", 0 0, L_0000024b65a4ac10;  alias, 1 drivers
    .scope S_0000024b659e02e0;
T_0 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000024b65a498a0_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000024b65a48f40_0, 0, 32;
T_0.0 ;
    %load/vec4 v0000024b65a48f40_0;
    %cmpi/s 16, 0, 32;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v0000024b65a48f40_0;
    %parti/s 4, 0, 2;
    %store/vec4 v0000024b65a49260_0, 0, 4;
    %load/vec4 v0000024b65a48f40_0;
    %addi 1, 0, 32;
    %store/vec4 v0000024b65a49120_0, 0, 32;
    %delay 10, 0;
    %load/vec4 v0000024b65a48c20_0;
    %load/vec4 v0000024b65a49120_0;
    %parti/s 4, 0, 2;
    %cmp/ne;
    %jmp/0xz  T_0.2, 4;
    %vpi_call 2 24 "$display", "Output mismatch when incrementing for\012entry ", v0000024b65a48f40_0, " expected ", &PV<v0000024b65a49120_0, 0, 4>, " but got a sum of ", v0000024b65a48c20_0 {0 0 0};
T_0.2 ;
    %load/vec4 v0000024b65a487c0_0;
    %load/vec4 v0000024b65a49120_0;
    %parti/s 1, 4, 4;
    %cmp/ne;
    %jmp/0xz  T_0.4, 4;
    %vpi_call 2 27 "$display", "Output mismatch when incrementing for\012entry ", v0000024b65a48f40_0, " expected ", &PV<v0000024b65a49120_0, 4, 1>, " but got a cry of ", v0000024b65a487c0_0 {0 0 0};
T_0.4 ;
    %load/vec4 v0000024b65a48f40_0;
    %addi 1, 0, 32;
    %store/vec4 v0000024b65a48f40_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000024b65a498a0_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000024b65a48f40_0, 0, 32;
T_0.6 ;
    %load/vec4 v0000024b65a48f40_0;
    %cmpi/s 3, 0, 32;
    %jmp/0xz T_0.7, 5;
    %load/vec4 v0000024b65a48f40_0;
    %parti/s 4, 0, 2;
    %store/vec4 v0000024b65a49260_0, 0, 4;
    %load/vec4 v0000024b65a49260_0;
    %pad/u 32;
    %store/vec4 v0000024b65a49120_0, 0, 32;
    %delay 10, 0;
    %load/vec4 v0000024b65a48c20_0;
    %load/vec4 v0000024b65a49120_0;
    %parti/s 4, 0, 2;
    %cmp/ne;
    %jmp/0xz  T_0.8, 4;
    %vpi_call 2 39 "$display", "Output mismatch when not incrementing for\012entry ", v0000024b65a48f40_0, " expected ", &PV<v0000024b65a49120_0, 0, 4>, " but got a sum of ", v0000024b65a48c20_0 {0 0 0};
T_0.8 ;
    %load/vec4 v0000024b65a487c0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_0.10, 4;
    %vpi_call 2 42 "$display", "Output mismatch when not incrementing for\012entry ", v0000024b65a48f40_0, " expected ", &PV<v0000024b65a49120_0, 4, 1>, " but got a cry of ", v0000024b65a487c0_0 {0 0 0};
T_0.10 ;
    %load/vec4 v0000024b65a48f40_0;
    %addi 1, 0, 32;
    %store/vec4 v0000024b65a48f40_0, 0, 32;
    %jmp T_0.6;
T_0.7 ;
    %end;
    .thread T_0;
    .scope S_0000024b659e02e0;
T_1 ;
    %vpi_call 2 54 "$dumpfile", "incrementer_waves.vcd" {0 0 0};
    %vpi_call 2 55 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000024b659e0470 {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "incrementer_top.v";
    "incrementer.v";
